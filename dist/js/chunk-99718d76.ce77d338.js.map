{"version":3,"sources":["webpack:///./node_modules/wind-layer/dist/MaptalksWindy.js","webpack:///./src/views/map/maptalks.vue?42ec","webpack:///./src/views/map/maptalks.vue?021b","webpack:///src/views/map/maptalks.vue","webpack:///./src/views/map/maptalks.vue?dea1","webpack:///./src/views/map/maptalks.vue"],"names":["global","factory","module","exports","__webpack_require__","this","maptalks","Windy","params","that","canvas","defaulColorScale","buildParams","projection","MIN_VELOCITY_INTENSITY","minVelocity","MAX_VELOCITY_INTENSITY","maxVelocity","VELOCITY_SCALE","velocityScale","Math","pow","window","devicePixelRatio","MAX_PARTICLE_AGE","particleAge","PARTICLE_LINE_WIDTH","lineWidth","PARTICLE_MULTIPLIER","particleMultiplier","PARTICLE_REDUCTION","FRAME_RATE","frameRate","COLOR_SCALE","colorScale","FRAME_TIME","builder","grid","date","λ0","φ0","Δλ","Δφ","ni","nj","invert","NULL_WIND_VECTOR","NaN","gridData","data","setData","bilinearInterpolateVector","x","y","g00","g10","g01","g11","rx","ry","a","b","c","d","u","v","sqrt","createWindBuilder","uComp","vComp","uData","vData","header","i","interpolate","createBuilder","forEach","record","parameterCategory","parameterNumber","buildGrid","callback","lo1","max","la2","la1","dx","dy","nx","ny","Date","refTime","setHours","getHours","forecastTime","p","isContinuous","floor","j","row","push","λ","φ","floorMod","fi","ci","fj","cj","isValue","undefined","n","isMobile","test","navigator","userAgent","distort","scale","wind","windy","distortion","τ","PI","H","hλ","hφ","pλ","project","pφ","k","cos","createField","columns","bounds","field","column","round","release","randomize","o","safetyNet","random","width","height","buildBounds","upperLeft","lowerRight","yMax","min","ceil","xMax","deg2rad","deg","rad2deg","ang","mapLonDelta","east","west","mapLatDelta","south","north","lat","lon","worldMapRadius","mapOffsetY","log","sin","equatorY","atan","exp","animationLoop","mercY","tan","ymin","ymax","xFactor","yFactor","interpolateField","extent","mapArea","interpolateColumn","coord","isFinite","batchInterpolate","start","now","setTimeout","animate","windIntensityColorScale","indexFor","m","length","colorStyles","buckets","map","particleCount","fadeFillStyle","particles","age","evolve","bucket","particle","xt","yt","g","getContext","draw","prev","globalCompositeOperation","fillRect","globalAlpha","beginPath","strokeStyle","moveTo","lineTo","stroke","fillStyle","then","frame","requestAnimationFrame","delta","onDraw","updateData","mapBounds","stop","cancelAnimationFrame","shift","w","h","ctx","clamp","high","value","imageData","getImageData","clearRect","putImageData","pLength","updateParams","getParams","update","interpolatePoint","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","id","clearTimeout","defaultConfig","Renderer","superclass","apply","arguments","__proto__","prototype","Object","create","constructor","_initialize","this$1","getMap","layer","sr","getSpatialReference","proj","getProjection","_windy","assign","getData","code","setCanvasUpdated","ref","_getWindExtents","prepareCanvas","_redraw","prepareRender","drawOnInteracting","getExtent","xmin","xmax","_updateParams","needToRedraw","isZooming","getPitch","call","onZoomStart","onZoomEnd","onDragRotateStart","onMoveStart","remove","renderer","CanvasRenderer","MaptalksWindy","Layer","options","_data","redraw","_getRenderer","onResize","onZooming","onMoving","onMoveEnd","toJSON","type","getId","config","spatialReference","SpatialReference","equals","_sr","fromJSON","json","registerRenderer","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_maptalks_vue_vue_type_style_index_0_id_8bd6d104_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_maptalks_vue_vue_type_style_index_0_id_8bd6d104_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","size","icon","plain","on","click","add3Dmarker","_v","addLine","exportjpg","staticRenderFns","maptalksvue_type_script_lang_js_","white_bd","bule_bd","tdt","mounted","_this","$nextTick","initMap","option","center","zoom","cneter","maxZoom","scaleControl","position","maxWidth","metric","imperial","zoomControl","slider","zoomLevel","overviewControl","level ","baseLayer","maptalks_es","urlTemplate","subdomains","attribution","methods","enableAltitude","drawAltitude","lineColor","addTo","markers","mk","_i","_mk","properties","altitude","addGeometry","animateTo","pitch","bearing","duration","line","visible","arrowStyle","arrowPlacement","symbol","replay","hide","animateShow","easing","state","playState","console","$notify","title","vertexSymbol","markerType","markerFill","markerLineColor","markerLineWidth","markerWidth","markerHeight","labelOptions","textSymbol","textFaceName","textFill","textLineSpacing","textHorizontalAlignment","textDx","boxStyle","padding","markerFillOpacity","clearButtonSymbol","markerDx","language","toDataURL","mimeType","save","fileName","map_maptalksvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__"],"mappings":"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","file":"js/chunk-99718d76.ce77d338.js","sourcesContent":["/*!\n * author: sakitam-fdd <smilefdd@gmail.com> \n * wind-layer v0.1.0\n * build-time: 2019-5-25 22:8\n * LICENSE: MIT\n * (c) 2017-2019 https://sakitam-fdd.github.io/wind-layer\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('maptalks')) :\n  typeof define === 'function' && define.amd ? define(['maptalks'], factory) :\n  (global = global || self, global.MaptalksWindy = factory(global.maptalks));\n}(this, function (maptalks) { 'use strict';\n\n  /* eslint-disable */\n\n  /*  Global class for simulating the movement of particle through a 1km wind grid\n   credit: All the credit for this work goes to: https://github.com/cambecc for creating the repo:\n   https://github.com/cambecc/earth. The majority of this code is directly take nfrom there, since its awesome.\n   This class takes a canvas element and an array of data (1km GFS from http://www.emc.ncep.noaa.gov/index.php?branch=GFS)\n   and then uses a mercator (forward/reverse) projection to correctly map wind vectors in \"map space\".\n   The \"start\" method takes the bounds of the map at its current extent and starts the whole gridding,\n   interpolation and animation process.\n   */\n\n  var Windy = function (params) {\n    if ( params === void 0 ) params = {};\n\n    this.params = params;\n    var that = this;\n\n    that.canvas = params.canvas;\n\n    var defaulColorScale = [\n      \"rgb(36,104, 180)\",\n      \"rgb(60,157, 194)\",\n      \"rgb(128,205,193 )\",\n      \"rgb(151,218,168 )\",\n      \"rgb(198,231,181)\",\n      \"rgb(238,247,217)\",\n      \"rgb(255,238,159)\",\n      \"rgb(252,217,125)\",\n      \"rgb(255,182,100)\",\n      \"rgb(252,150,75)\",\n      \"rgb(250,112,52)\",\n      \"rgb(245,64,32)\",\n      \"rgb(237,45,28)\",\n      \"rgb(220,24,32)\",\n      \"rgb(180,0,35)\"\n    ];\n\n    var buildParams = function(params) {\n      if (!params.projection) { params.projection = 'EPSG:4326'; }\n      that.MIN_VELOCITY_INTENSITY = params.minVelocity || 0;                      // velocity at which particle intensity is minimum (m/s)\n      that.MAX_VELOCITY_INTENSITY = params.maxVelocity || 10;                     // velocity at which particle intensity is maximum (m/s)\n      that.VELOCITY_SCALE = (params.velocityScale || 0.005) * (Math.pow(window.devicePixelRatio, 1 / 3) || 1); // scale for wind velocity (completely arbitrary--this value looks nice)\n      that.MAX_PARTICLE_AGE = params.particleAge || 90;                         \t // max number of frames a particle is drawn before regeneration\n      that.PARTICLE_LINE_WIDTH = params.lineWidth || 1;                           // line width of a drawn particle\n      that.PARTICLE_MULTIPLIER = params.particleMultiplier || 1 / 300;            // particle count scalar (completely arbitrary--this values looks nice)\n      that.PARTICLE_REDUCTION = (Math.pow(window.devicePixelRatio, 1 / 3) || 1.6);   // multiply particle count for mobiles by this amount\n      that.FRAME_RATE = params.frameRate || 16;\n      that.COLOR_SCALE = params.colorScale || defaulColorScale;\n    };\n\n    buildParams(params);\n\n    window.FRAME_TIME = 1000 / that.FRAME_RATE;   // desired frames per second\n\n    var NULL_WIND_VECTOR = [NaN, NaN, null];  // singleton for no wind in the form: [u, v, magnitude]\n\n    var builder;\n    var grid;\n    var gridData = that.params.data;\n    var date;\n    var λ0, φ0, Δλ, Δφ, ni, nj;\n\n    var setData = function (data) {\n      gridData = data;\n    };\n\n    // interpolation for vectors like wind (u,v,m)\n    var bilinearInterpolateVector = function (x, y, g00, g10, g01, g11) {\n      var rx = (1 - x);\n      var ry = (1 - y);\n      var a = rx * ry, b = x * ry, c = rx * y, d = x * y;\n      var u = g00[0] * a + g10[0] * b + g01[0] * c + g11[0] * d;\n      var v = g00[1] * a + g10[1] * b + g01[1] * c + g11[1] * d;\n      return [u, v, Math.sqrt(u * u + v * v)];\n    };\n\n\n    var createWindBuilder = function (uComp, vComp) {\n      var uData = uComp.data, vData = vComp.data;\n      return {\n        header: uComp.header,\n        //recipe: recipeFor(\"wind-\" + uComp.header.surface1Value),\n        data: function (i) {\n          return [uData[i], vData[i]];\n        },\n        interpolate: bilinearInterpolateVector\n      }\n    };\n\n    var createBuilder = function (data) {\n      var uComp = null, vComp = null;\n\n      data.forEach(function (record) {\n        switch (record.header.parameterCategory + \",\" + record.header.parameterNumber) {\n          case \"1,2\":\n          case \"2,2\":\n            uComp = record;\n            break;\n          case \"1,3\":\n          case \"2,3\":\n            vComp = record;\n            break;\n          default:\n\n        }\n      });\n\n      return createWindBuilder(uComp, vComp);\n    };\n\n    var buildGrid = function (data, callback) {\n\n      builder = createBuilder(data);\n      var header = builder.header;\n\n      λ0 = header.lo1;\n      φ0 = Math.max(header.la2, header.la1);  // the grid's origin (e.g., 0.0E, 90.0N)\n\n      Δλ = header.dx;\n      Δφ = header.dy;    // distance between grid points (e.g., 2.5 deg lon, 2.5 deg lat)\n\n      ni = header.nx;\n      nj = header.ny;    // number of grid points W-E and N-S (e.g., 144 x 73)\n\n      date = new Date(header.refTime);\n      date.setHours(date.getHours() + header.forecastTime);\n\n      // Scan mode 0 assumed. Longitude increases from λ0, and latitude decreases from φ0.\n      // http://www.nco.ncep.noaa.gov/pmb/docs/grib2/grib2_table3-4.shtml\n      grid = [];\n      var p = 0;\n      var isContinuous = Math.floor(ni * Δλ) >= 360;\n\n      for (var j = 0; j < nj; j++) {\n        var row = [];\n        for (var i = 0; i < ni; i++, p++) {\n          row[i] = builder.data(p);\n        }\n        if (isContinuous) {\n          // For wrapped grids, duplicate first column as last column to simplify interpolation logic\n          row.push(row[0]);\n        }\n        grid[j] = row;\n      }\n\n      callback({\n        date: date,\n        interpolate: interpolate\n      });\n    };\n\n    /**\n     * Get interpolated grid value from Lon/Lat position\n     * @param λ {Float} Longitude\n     * @param φ {Float} Latitude\n     * @returns {Object}\n     */\n    var interpolate = function (λ, φ) {\n\n      if (!grid) { return null; }\n\n      var i = floorMod(λ - λ0, 360) / Δλ;  // calculate longitude index in wrapped range [0, 360)\n      var j = (φ0 - φ) / Δφ;                 // calculate latitude index in direction +90 to -90\n\n      var fi = Math.floor(i), ci = fi + 1;\n      var fj = Math.floor(j), cj = fj + 1;\n\n      var row;\n      if ((row = grid[fj])) {\n        var g00 = row[fi];\n        var g10 = row[ci];\n        if (isValue(g00) && isValue(g10) && (row = grid[cj])) {\n          var g01 = row[fi];\n          var g11 = row[ci];\n          if (isValue(g01) && isValue(g11)) {\n            // All four points found, so interpolate the value.\n            return builder.interpolate(i - fi, j - fj, g00, g10, g01, g11);\n          }\n        }\n      }\n      return null;\n    };\n\n    /**\n     * @returns {Boolean} true if the specified value is not null and not undefined.\n     */\n    var isValue = function (x) {\n      return x !== null && x !== undefined;\n    };\n\n    /**\n     * @returns {Number} returns remainder of floored division, i.e., floor(a / n). Useful for consistent modulo\n     *          of negative numbers. See http://en.wikipedia.org/wiki/Modulo_operation.\n     */\n    var floorMod = function (a, n) {\n      return a - n * Math.floor(a / n);\n    };\n\n    /**\n     * @returns {Boolean} true if agent is probably a mobile device. Don't really care if this is accurate.\n     */\n    var isMobile = function () {\n      return (/android|blackberry|iemobile|ipad|iphone|ipod|opera mini|webos/i).test(navigator.userAgent);\n    };\n\n    /**\n     * Calculate distortion of the wind vector caused by the shape of the projection at point (x, y). The wind\n     * vector is modified in place and returned by this function.\n     */\n    var distort = function (projection, λ, φ, x, y, scale, wind, windy) {\n      var u = wind[0] * scale;\n      var v = wind[1] * scale;\n      var d = distortion(projection, λ, φ, x, y, windy);\n\n      // Scale distortion vectors by u and v, then add.\n      wind[0] = d[0] * u + d[2] * v;\n      wind[1] = d[1] * u + d[3] * v;\n      return wind;\n    };\n\n    var distortion = function (projection, λ, φ, x, y, windy) {\n      var τ = 2 * Math.PI;\n      // var H = Math.pow(10, -5.2);\n      var H = that.params.projection === 'EPSG:4326' ? 5 : Math.pow(10, -5.2);\n      var hλ = λ < 0 ? H : -H;\n      var hφ = φ < 0 ? H : -H;\n\n      var pλ = project(φ, λ + hλ, windy);\n      var pφ = project(φ + hφ, λ, windy);\n\n      // Meridian scale factor (see Snyder, equation 4-3), where R = 1. This handles issue where length of 1º λ\n      // changes depending on φ. Without this, there is a pinching effect at the poles.\n      var k = Math.cos(φ / 360 * τ);\n      return [\n        (pλ[0] - x) / hλ / k,\n        (pλ[1] - y) / hλ / k,\n        (pφ[0] - x) / hφ,\n        (pφ[1] - y) / hφ\n      ];\n    };\n\n    var createField = function (columns, bounds, callback) {\n\n      /**\n       * @returns {Array} wind vector [u, v, magnitude] at the point (x, y), or [NaN, NaN, null] if wind\n       *          is undefined at that point.\n       */\n      function field (x, y) {\n        var column = columns[Math.round(x)];\n        return column && column[Math.round(y)] || NULL_WIND_VECTOR;\n      }\n\n      // Frees the massive \"columns\" array for GC. Without this, the array is leaked (in Chrome) each time a new\n      // field is interpolated because the field closure's context is leaked, for reasons that defy explanation.\n      field.release = function () {\n        columns = [];\n      };\n\n      field.randomize = function (o) {  // UNDONE: this method is terrible\n        var x, y;\n        var safetyNet = 0;\n        do {\n          x = Math.round(Math.floor(Math.random() * bounds.width) + bounds.x);\n          y = Math.round(Math.floor(Math.random() * bounds.height) + bounds.y);\n        } while (field(x, y)[2] === null && safetyNet++ < 30);\n        o.x = x;\n        o.y = y;\n        return o;\n      };\n\n      callback(bounds, field);\n    };\n\n    var buildBounds = function (bounds, width, height) {\n      var upperLeft = bounds[0];\n      var lowerRight = bounds[1];\n      var x = Math.round(upperLeft[0]); //Math.max(Math.floor(upperLeft[0], 0), 0);\n      var y = Math.max(Math.floor(upperLeft[1], 0), 0);\n      var xMax = Math.min(Math.ceil(lowerRight[0], width), width - 1);\n      var yMax = Math.min(Math.ceil(lowerRight[1], height), height - 1);\n      return {x: x, y: y, xMax: width, yMax: yMax, width: width, height: height};\n    };\n\n    var deg2rad = function (deg) {\n      return (deg / 180) * Math.PI;\n    };\n\n    var rad2deg = function (ang) {\n      return ang / (Math.PI / 180.0);\n    };\n\n    var invert;\n\n    if (that.params.projection === 'EPSG:4326') {\n      invert = function (x, y, windy) {\n        var mapLonDelta = windy.east - windy.west;\n        var mapLatDelta = windy.south - windy.north;\n        var lat = rad2deg(windy.north) + y / windy.height * rad2deg(mapLatDelta);\n        var lon = rad2deg(windy.west) + x / windy.width * rad2deg(mapLonDelta);\n        return [lon, lat];\n      };\n    } else {\n      invert = function (x, y, windy) {\n        var mapLonDelta = windy.east - windy.west;\n        var worldMapRadius = windy.width / rad2deg(mapLonDelta) * 360 / (2 * Math.PI);\n        var mapOffsetY = (worldMapRadius / 2 * Math.log((1 + Math.sin(windy.south)) / (1 - Math.sin(windy.south))));\n        var equatorY = windy.height + mapOffsetY;\n        var a = (equatorY - y) / worldMapRadius;\n        var lat = 180 / Math.PI * (2 * Math.atan(Math.exp(a)) - Math.PI / 2);\n        var lon = rad2deg(windy.west) + x / windy.width * rad2deg(mapLonDelta);\n        return [lon, lat];\n      };\n    }\n\n    var mercY = function (lat) {\n      return Math.log(Math.tan(lat / 2 + Math.PI / 4));\n    };\n\n\n    var project = function (lat, lon, windy) { // both in radians, use deg2rad if neccessary\n      var ymin = mercY(windy.south);\n      var ymax = mercY(windy.north);\n      var xFactor = windy.width / (windy.east - windy.west);\n      var yFactor = windy.height / (ymax - ymin);\n\n      var y = mercY(deg2rad(lat));\n      var x = (deg2rad(lon) - windy.west) * xFactor;\n      var y = (ymax - y) * yFactor; // y points south\n      return [x, y];\n    };\n\n    var interpolateField = function (grid, bounds, extent, callback) {\n\n      var projection = {};\n      var mapArea = ((extent.south - extent.north) * (extent.west - extent.east));\n      var velocityScale = that.VELOCITY_SCALE * Math.pow(mapArea, 0.4);\n\n      var columns = [];\n      var x = bounds.x;\n\n      function interpolateColumn (x) {\n        var column = [];\n        for (var y = bounds.y; y <= bounds.yMax; y += 2) {\n          var coord = invert(x, y, extent);\n          if (coord) {\n            var λ = coord[0], φ = coord[1];\n            if (isFinite(λ)) {\n              var wind = grid.interpolate(λ, φ);\n              if (wind) {\n                wind = distort(projection, λ, φ, x, y, velocityScale, wind, extent);\n                column[y + 1] = column[y] = wind;\n\n              }\n            }\n          }\n        }\n        columns[x + 1] = columns[x] = column;\n      }\n\n      (function batchInterpolate () {\n        var start = Date.now();\n        while (x < bounds.width) {\n          interpolateColumn(x);\n          x += 2;\n          if ((Date.now() - start) > 1000) { //MAX_TASK_TIME) {\n            setTimeout(batchInterpolate, 25);\n            return;\n          }\n        }\n        createField(columns, bounds, callback);\n      })();\n    };\n\n    var animationLoop;\n    var animate = function (bounds, field) {\n\n      function windIntensityColorScale (min, max) {\n\n        that.COLOR_SCALE.indexFor = function (m) {  // map velocity speed to a style\n          return Math.max(0, Math.min((that.COLOR_SCALE.length - 1),\n            Math.round((m - min) / (max - min) * (that.COLOR_SCALE.length - 1))));\n\n        };\n\n        return that.COLOR_SCALE;\n      }\n\n      var colorStyles = windIntensityColorScale(that.MIN_VELOCITY_INTENSITY, that.MAX_VELOCITY_INTENSITY);\n      var buckets = colorStyles.map(function () {\n        return [];\n      });\n\n      var particleCount = Math.round(bounds.width * bounds.height * that.PARTICLE_MULTIPLIER);\n      if (isMobile()) {\n        particleCount *= that.PARTICLE_REDUCTION;\n      }\n\n      var fadeFillStyle = \"rgba(0, 0, 0, 0.97)\";\n\n      var particles = [];\n      for (var i = 0; i < particleCount; i++) {\n        particles.push(field.randomize({age: Math.floor(Math.random() * that.MAX_PARTICLE_AGE) + 0}));\n      }\n\n      function evolve () {\n        buckets.forEach(function (bucket) {\n          bucket.length = 0;\n        });\n        particles.forEach(function (particle) {\n          if (particle.age > that.MAX_PARTICLE_AGE) {\n            field.randomize(particle).age = 0;\n          }\n          var x = particle.x;\n          var y = particle.y;\n          var v = field(x, y);  // vector at current position\n          var m = v[2];\n          if (m === null) {\n            particle.age = that.MAX_PARTICLE_AGE;  // particle has escaped the grid, never to return...\n          }\n          else {\n            var xt = x + v[0];\n            var yt = y + v[1];\n            if (field(xt, yt)[2] !== null) {\n              // Path from (x,y) to (xt,yt) is visible, so add this particle to the appropriate draw bucket.\n              particle.xt = xt;\n              particle.yt = yt;\n              buckets[colorStyles.indexFor(m)].push(particle);\n            }\n            else {\n              // Particle isn't visible, but it still moves through the field.\n              particle.x = xt;\n              particle.y = yt;\n            }\n          }\n          particle.age += 1;\n        });\n      }\n\n      var g = that.canvas.getContext(\"2d\");\n      g.lineWidth = that.PARTICLE_LINE_WIDTH;\n      g.fillStyle = fadeFillStyle;\n      g.globalAlpha = 0.6;\n\n      function draw () {\n        // Fade existing particle trails.\n        var prev = \"lighter\";\n        g.globalCompositeOperation = \"destination-in\";\n        g.fillRect(bounds.x, bounds.y, bounds.width, bounds.height);\n        g.globalCompositeOperation = prev;\n        g.globalAlpha = 0.9;\n\n        // Draw new particle trails.\n        buckets.forEach(function (bucket, i) {\n          if (bucket.length > 0) {\n            g.beginPath();\n            g.strokeStyle = colorStyles[i];\n            bucket.forEach(function (particle) {\n              g.moveTo(particle.x, particle.y);\n              g.lineTo(particle.xt, particle.yt);\n              particle.x = particle.xt;\n              particle.y = particle.yt;\n            });\n            g.stroke();\n          }\n        });\n      }\n\n      var then = Date.now();\n      (function frame () {\n        animationLoop = requestAnimationFrame(frame);\n        var now = Date.now();\n        var delta = now - then;\n        if (delta > FRAME_TIME) {\n          then = now - (delta % FRAME_TIME);\n          evolve();\n          draw();\n          params.onDraw && params.onDraw();\n        }\n      })();\n    };\n\n    var updateData = function (data, bounds, width, height, extent) {\n      delete that.params.data;\n      that.params.data = data;\n      if (extent)\n        { start(bounds, width, height, extent); }\n    };\n\n    var start = function (bounds, width, height, extent) {\n      var mapBounds = {\n        south: deg2rad(extent[0][1]),\n        north: deg2rad(extent[1][1]),\n        east: deg2rad(extent[1][0]),\n        west: deg2rad(extent[0][0]),\n        width: width,\n        height: height\n      };\n\n      stop();\n\n      // build grid\n      buildGrid(gridData, function (grid) {\n        // interpolateField\n        interpolateField(grid, buildBounds(bounds, width, height), mapBounds, function (bounds, field) {\n          // animate the canvas with random points\n          windy.field = field;\n          animate(bounds, field);\n        });\n\n      });\n    };\n\n    var stop = function () {\n      if (windy.field) { windy.field.release(); }\n      if (animationLoop) { cancelAnimationFrame(animationLoop); }\n    };\n\n    var shift = function (dx, dy) {\n      var canvas = that.canvas, w = canvas.width, h = canvas.height, ctx = canvas.getContext(\"2d\");\n      if (w > dx && h > dy) {\n        var clamp = function (high, value) {\n          return Math.max(0, Math.min(high, value));\n        };\n        var imageData = ctx.getImageData(clamp(w, -dx), clamp(h, -dy), clamp(w, w - dx), clamp(h, h - dy));\n        ctx.clearRect(0, 0, w, h);\n        ctx.putImageData(imageData, clamp(w, dx), clamp(h, dy));\n        for (var i = 0, pLength = particles.length; i < pLength; i++) {\n          particles[i].x += dx;\n          particles[i].y += dy;\n        }\n      }\n    };\n\n    var updateParams = function(params) {\n      that.params = params;\n      buildParams(that.params);\n    };\n\n    var getParams = function() {\n      return that.params;\n    };\n\n    var windy = {\n      params: that.params,\n      start: start,\n      stop: stop,\n      update: updateData,\n      shift: shift,\n      createField: createField,\n      interpolatePoint: interpolate,\n      setData: setData,\n      updateParams: updateParams,\n      getParams: getParams,\n      buildParams: buildParams,\n    };\n\n    return windy;\n  };\n\n  // polyfill\n  window.requestAnimationFrame = (function () {\n    return window.requestAnimationFrame ||\n      window.webkitRequestAnimationFrame ||\n      window.mozRequestAnimationFrame ||\n      window.oRequestAnimationFrame ||\n      window.msRequestAnimationFrame ||\n      function (callback) {\n        return window.setTimeout(callback, 1000 / window.FRAME_RATE);\n      };\n  })();\n\n  if (!window.cancelAnimationFrame) {\n    window.cancelAnimationFrame = function (id) {\n      clearTimeout(id);\n    };\n  }\n\n  var defaultConfig = {\n    minVelocity: 0, // 粒子强度最小的速度 (m/s)\n    maxVelocity: 10, // 粒子强度最大的速度 (m/s)\n    velocityScale: 0.05, // 风速的比例\n    particleAge: 90, // 重绘之前生成的离子数量的最大帧数\n    lineWidth: 1, // 绘制粒子的线宽\n    particleMultiplier: 1 / 300, // 离子数量\n    colorScale: undefined,\n    animate: true\n  };\n\n  var Renderer = /*@__PURE__*/(function (superclass) {\n    function Renderer () {\n      superclass.apply(this, arguments);\n    }\n\n    if ( superclass ) Renderer.__proto__ = superclass;\n    Renderer.prototype = Object.create( superclass && superclass.prototype );\n    Renderer.prototype.constructor = Renderer;\n\n    Renderer.prototype._initialize = function _initialize () {\n      var this$1 = this;\n\n      var map = this.getMap();\n      var params = this.layer.getParams();\n      var sr = this.layer.getSpatialReference();\n      if (!sr) {\n        sr = map.getSpatialReference();\n      }\n      var proj = sr.getProjection();\n      this._windy = new Windy(Object.assign({}, {canvas: this.canvas,\n        data: this.layer.getData(),\n        projection: proj.code || 'EPSG:4326',\n        onDraw: function () {\n          this$1.setCanvasUpdated();\n        }},\n        params));\n    };\n\n    Renderer.prototype.draw = function draw () {\n      var ref;\n\n      var extent = this._getWindExtents();\n      this.prepareCanvas();\n      if (!this._windy) {\n        this._initialize();\n      }\n      this._windy && (ref = this._windy).start.apply(ref, extent);\n    };\n\n    Renderer.prototype._redraw = function _redraw () {\n      this.prepareRender();\n      this.draw();\n    };\n\n    Renderer.prototype.drawOnInteracting = function drawOnInteracting () {\n      // nothing to draw when interacting\n    };\n\n    Renderer.prototype._getWindExtents = function _getWindExtents () {\n      var map = this.getMap();\n      if (!map) { return null; }\n      var extent = map.getExtent();\n      var xmin = extent.xmin;\n      var xmax = extent.xmax > 0 ? extent.xmax : 360 + extent.xmax;\n      var ymin = extent.ymin;\n      var ymax = extent.ymax;\n      return [\n        [[0, 0], [map.width, map.height]],\n        map.width,\n        map.height,\n        [[\n          xmin,\n          ymin\n        ], [\n          xmax,\n          ymax\n        ]]\n      ];\n    };\n\n    Renderer.prototype._updateParams = function _updateParams () {\n      if (this._windy) {\n        var params = this.layer.getParams();\n        this._windy.updateParams(params);\n        this.draw();\n      }\n    };\n\n    /**\n     * tell layer redraw\n     * @returns {*}\n     */\n    Renderer.prototype.needToRedraw = function needToRedraw () {\n      var map = this.getMap();\n      if (map.isZooming() && !map.getPitch()) {\n        return false;\n      }\n      return superclass.prototype.needToRedraw.call(this);\n    };\n\n    Renderer.prototype.onZoomStart = function onZoomStart () {\n      // this._windy && this._windy.stop();\n      // eslint-disable-next-line prefer-rest-params\n      superclass.prototype.onZoomStart.apply(this, arguments);\n    };\n\n    Renderer.prototype.onZoomEnd = function onZoomEnd () {\n      // eslint-disable-next-line prefer-rest-params\n      superclass.prototype.onZoomEnd.apply(this, arguments);\n    };\n\n    Renderer.prototype.onDragRotateStart = function onDragRotateStart () {\n      // this._windy && this._windy.stop();\n    };\n\n    Renderer.prototype.onMoveStart = function onMoveStart () {\n      // this._windy && this._windy.stop();\n    };\n\n    Renderer.prototype.remove = function remove () {\n      if (this._windy) {\n        this._windy.stop();\n        delete this._windy;\n      }\n      superclass.prototype.remove.call(this);\n    };\n\n    return Renderer;\n  }(maptalks.renderer.CanvasRenderer));\n\n  var MaptalksWindy = /*@__PURE__*/(function (Layer) {\n    function MaptalksWindy (id, data, options) {\n      Layer.call(this, id, Object.assign(defaultConfig, options));\n      this._data = data;\n    }\n\n    if ( Layer ) MaptalksWindy.__proto__ = Layer;\n    MaptalksWindy.prototype = Object.create( Layer && Layer.prototype );\n    MaptalksWindy.prototype.constructor = MaptalksWindy;\n\n    MaptalksWindy.prototype.getData = function getData () {\n      return this._data;\n    };\n\n    MaptalksWindy.prototype.setData = function setData (data) {\n      this._data = data;\n      this.redraw();\n      return this;\n    };\n\n    MaptalksWindy.prototype.updateParams = function updateParams (params) {\n      var renderer = this._getRenderer();\n      this.options = Object.assign(this.options, params);\n      if (renderer) {\n        var ref = this.options;\n        var minVelocity = ref.minVelocity;\n        var maxVelocity = ref.maxVelocity;\n        var velocityScale = ref.velocityScale;\n        var particleAge = ref.particleAge;\n        var lineWidth = ref.lineWidth;\n        var particleMultiplier = ref.particleMultiplier;\n        var colorScale = ref.colorScale;\n        renderer._updateParams({\n          minVelocity: minVelocity, // 粒子强度最小的速度 (m/s)\n          maxVelocity: maxVelocity, // 粒子强度最大的速度 (m/s)\n          velocityScale: velocityScale, // 风速的比例\n          particleAge: particleAge, // 重绘之前生成的离子数量的最大帧数\n          lineWidth: lineWidth, // 绘制粒子的线宽\n          particleMultiplier: particleMultiplier, // 离子数量\n          colorScale: colorScale\n        });\n      }\n      return this;\n    };\n\n    MaptalksWindy.prototype.getParams = function getParams () {\n      var ref = this.options;\n      var minVelocity = ref.minVelocity;\n      var maxVelocity = ref.maxVelocity;\n      var velocityScale = ref.velocityScale;\n      var particleAge = ref.particleAge;\n      var lineWidth = ref.lineWidth;\n      var particleMultiplier = ref.particleMultiplier;\n      var colorScale = ref.colorScale;\n      return {\n        minVelocity: minVelocity,\n        maxVelocity: maxVelocity,\n        velocityScale: velocityScale,\n        particleAge: particleAge,\n        lineWidth: lineWidth,\n        particleMultiplier: particleMultiplier,\n        colorScale: colorScale\n      };\n    };\n\n    MaptalksWindy.prototype.onResize = function onResize () {};\n\n    MaptalksWindy.prototype.onZoomStart = function onZoomStart () {};\n\n    MaptalksWindy.prototype.onZooming = function onZooming () {};\n\n    MaptalksWindy.prototype.onZoomEnd = function onZoomEnd () {};\n\n    MaptalksWindy.prototype.onMoveStart = function onMoveStart () {};\n\n    MaptalksWindy.prototype.onMoving = function onMoving () {};\n\n    MaptalksWindy.prototype.onMoveEnd = function onMoveEnd () {};\n\n    MaptalksWindy.prototype.redraw = function redraw () {\n      var renderer = this._getRenderer();\n      if (renderer) {\n        renderer._redraw();\n      }\n      return this;\n    };\n\n    MaptalksWindy.prototype.toJSON = function toJSON () {\n      return {\n        type: 'MaptalksWindy',\n        id: this.getId(),\n        options: this.config(),\n        data: this.getData()\n      };\n    };\n\n    MaptalksWindy.prototype.getSpatialReference = function getSpatialReference () {\n      var map = this.getMap();\n      if (map && (!this.options.spatialReference || maptalks.SpatialReference.equals(this.options.spatialReference, map.options.spatialReference))) {\n        return map.getSpatialReference();\n      }\n      this._sr = this._sr || new maptalks.SpatialReference(this.options.spatialReference);\n      return this._sr;\n    };\n\n    MaptalksWindy.fromJSON = function fromJSON (json) {\n      if (!json || json.type !== 'MaptalksWindy') { return null; }\n      // eslint-disable-next-line new-cap\n      var layer = new MaptalksWindy(json.id, json.data, json.options);\n      return layer;\n    };\n\n    return MaptalksWindy;\n  }(maptalks.Layer));\n\n  MaptalksWindy.registerRenderer('canvas', Renderer);\n\n  return MaptalksWindy;\n\n}));\n//# sourceMappingURL=MaptalksWindy.js.map\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./maptalks.vue?vue&type=style&index=0&id=8bd6d104&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./maptalks.vue?vue&type=style&index=0&id=8bd6d104&scoped=true&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"main\"},[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\",\"icon\":\"el-icon-location\",\"plain\":\"\"},on:{\"click\":_vm.add3Dmarker}},[_vm._v(\"添加3D标记\")]),_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\",\"icon\":\"el-icon-minus\",\"plain\":\"\"},on:{\"click\":_vm.addLine}},[_vm._v(\"动态画线\")]),_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\",\"icon\":\"el-icon-info\",\"plain\":\"\"},on:{\"click\":_vm.cj}},[_vm._v(\"测量距离\")]),_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\",\"icon\":\"el-icon-printer\",\"plain\":\"\"},on:{\"click\":_vm.exportjpg}},[_vm._v(\"导出jpg\")]),_c('div',{attrs:{\"id\":\"map\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"main\">\r\n    <el-button type=\"primary\" size=\"mini\" icon=\"el-icon-location\" plain @click=\"add3Dmarker\">添加3D标记</el-button>\r\n    <el-button type=\"primary\" size=\"mini\" icon=\"el-icon-minus\" plain @click=\"addLine\">动态画线</el-button>\r\n    <el-button type=\"primary\" size=\"mini\" icon=\"el-icon-info\" plain @click=\"cj\">测量距离</el-button>\r\n    <el-button type=\"primary\" size=\"mini\" icon=\"el-icon-printer\" plain @click=\"exportjpg\">导出jpg</el-button>\r\n    <div id=\"map\"></div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport \"maptalks/dist/maptalks.css\";\r\nimport * as maptalks from \"maptalks\";\r\nimport MaptalksWindy from \"wind-layer/dist/MaptalksWindy.js\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      map: null,\r\n      white_bd:\r\n        \"http://online{s}.map.bdimg.com/onlinelabel/?qt=tile&x={x}&y={y}&z={z}&styles=pl&scaler=1&p=1\",\r\n      bule_bd:\r\n        \"http://api{s}.map.bdimg.com/customimage/tile?&x={x}&y={y}&z={z}&udt=20170620&scale=1&ak=8d6c8b8f3749aed6b1aff3aad6f40e37&styles=t%3Awater%7Ce%3Aall%7Cc%3A%23044161%2Ct%3Aland%7Ce%3Aall%7Cc%3A%23091934%2Ct%3Aboundary%7Ce%3Ag%7Cc%3A%23064f85%2Ct%3Arailway%7Ce%3Aall%7Cv%3Aoff%2Ct%3Ahighway%7Ce%3Ag%7Cc%3A%23004981%2Ct%3Ahighway%7Ce%3Ag.f%7Cc%3A%23005b96%7Cl%3A1%2Ct%3Ahighway%7Ce%3Al%7Cv%3Aon%2Ct%3Aarterial%7Ce%3Ag%7Cc%3A%23004981%7Cl%3A-39%2Ct%3Aarterial%7Ce%3Ag.f%7Cc%3A%2300508b%2Ct%3Agreen%7Ce%3Aall%7Cv%3Aoff%7Cc%3A%23056197%2Ct%3Asubway%7Ce%3Aall%7Cv%3Aoff%2Ct%3Amanmade%7Ce%3Aall%7Cv%3Aoff%2Ct%3Alocal%7Ce%3Aall%7Cv%3Aoff%2Ct%3Aarterial%7Ce%3Al%7Cv%3Aon%2Ct%3Aboundary%7Ce%3Ag.f%7Cc%3A%23029fd4%2Ct%3Abuilding%7Ce%3Aall%7Cc%3A%231a5787%2Ct%3Apoi%7Ce%3Aall%7Cv%3Aoff%2Ct%3Aall%7Ce%3Al%7Cv%3Aoff\",\r\n      tdt:\r\n        \"http://t{s}.tianditu.com/DataServer?T=vec_c&x={x}&y={y}&l={z}&tk=de0dc270a51aaca3dd4e64d4f8c81ff6\"\r\n    };\r\n  },\r\n  mounted() {\r\n    this.$nextTick(() => initMap());\r\n    const initMap = () => {\r\n      let option = {\r\n        center: [105.19052356963802, 36.04231948670001],\r\n        zoom: 5,\r\n        cneter: [121.0],\r\n        maxZoom: 16,\r\n        spatialReference: {\r\n          projection: \"baidu\"\r\n        },\r\n        scaleControl: {\r\n          position: \"bottom-left\",\r\n          maxWidth: 100,\r\n          metric: true,\r\n          imperial: true\r\n        },\r\n        zoomControl: {\r\n          position: \"top-right\",\r\n          slider: true,\r\n          zoomLevel: true\r\n        },\r\n        overviewControl: {\r\n          \"level \": 5,\r\n          size: [130, 80]\r\n        },\r\n        baseLayer: new maptalks.TileLayer(\"base\", {\r\n          urlTemplate: this.white_bd,\r\n          subdomains: [0, 1, 2],\r\n          attribution:\r\n            '&copy; <a href=\"http://www.osm.org\" target=\"_blank\">OpenStreetMap</a> contributors'\r\n        })\r\n      };\r\n      this.map = new maptalks.Map(\"map\", option);\r\n    };\r\n  },\r\n  methods: {\r\n    add3Dmarker() {\r\n      var layer = new maptalks.VectorLayer(\"3dmk\", {\r\n        enableAltitude: true,\r\n        // draw altitude\r\n        drawAltitude: {\r\n          lineWidth: 1,\r\n          lineColor: \"red\"\r\n        }\r\n      }).addTo(this.map);\r\n      let markers = [];\r\n      let mk = [\r\n        [121.1, 31.1331, 10001],\r\n        [121.12234, 31.133, 8001],\r\n        [121.1342, 31.13241, 6001],\r\n        [121.14, 31.1123, 7001],\r\n        [121.4, 31.223, 10001],\r\n        [121.2234, 31.133, 8001],\r\n        [121.13, 31.12341, 6001],\r\n        [121.14, 31.1423, 700]\r\n      ];\r\n      for (let i of mk) {\r\n        markers.push(\r\n          new maptalks.Marker([i[0], i[1]], {\r\n            properties: {\r\n              altitude: i[2]\r\n            }\r\n          })\r\n        );\r\n      }\r\n      layer.addGeometry(markers);\r\n      this.map.animateTo(\r\n        {\r\n          center: [121.1, 31.1],\r\n          zoom: 11,\r\n          pitch: 65,\r\n          bearing: 360\r\n        },\r\n        {\r\n          duration: 7000\r\n        }\r\n      );\r\n    },\r\n    addLine() {\r\n      this.map.animateTo(\r\n        {\r\n          center: [121.2, 31.1],\r\n          zoom: 12,\r\n          pitch: 15,\r\n          bearing: 360\r\n        },\r\n        {\r\n          duration: 1000\r\n        }\r\n      );\r\n      var line = new maptalks.LineString(\r\n        [\r\n          [121.1, 31.1331, 10001],\r\n          [121.12234, 31.133, 8001],\r\n          [121.1342, 31.13241, 6001],\r\n          [121.14, 31.1123, 7001],\r\n          [121.4, 31.223, 10001],\r\n          [121.2234, 31.133, 8001],\r\n          [121.13, 31.12341, 6001],\r\n          [121.14, 31.1423, 700]\r\n        ],\r\n        {\r\n          visible: false,\r\n          arrowStyle: \"classic\",\r\n          arrowPlacement: \"vertex-last\",\r\n          symbol: {\r\n            lineColor: \"#1bbc9b\",\r\n            lineWidth: 6\r\n          }\r\n        }\r\n      );\r\n      var lineLayer = new maptalks.VectorLayer(\"vector\", line).addTo(this.map);\r\n\r\n      function replay() {\r\n        line.hide();\r\n        //line's animateShow\r\n        line.animateShow(\r\n          {\r\n            duration: 2500,\r\n            easing: \"out\"\r\n          },\r\n          function(frame) {\r\n            if (frame.state.playState === \"finished\") {\r\n              console.log(\"finished\");\r\n            }\r\n          }\r\n        );\r\n      }\r\n      setTimeout(() => {\r\n        replay();\r\n      }, 1200);\r\n    },\r\n    cj() {\r\n      this.$notify({\r\n        title: \"单击地图开始测距! 双击结束测距！\",\r\n        type: \"success\"\r\n      });\r\n      var distanceTool = new maptalks.DistanceTool({\r\n        symbol: {\r\n          lineColor: \"#34495e\",\r\n          lineWidth: 2\r\n        },\r\n        vertexSymbol: {\r\n          markerType: \"ellipse\",\r\n          markerFill: \"#1bbc9b\",\r\n          markerLineColor: \"#000\",\r\n          markerLineWidth: 3,\r\n          markerWidth: 10,\r\n          markerHeight: 10\r\n        },\r\n\r\n        labelOptions: {\r\n          textSymbol: {\r\n            textFaceName: \"monospace\",\r\n            textFill: \"#fff\",\r\n            textLineSpacing: 1,\r\n            textHorizontalAlignment: \"right\",\r\n            textDx: 15,\r\n            markerLineColor: \"#b4b3b3\",\r\n            markerFill: \"#000\"\r\n          },\r\n          boxStyle: {\r\n            padding: [6, 2],\r\n            symbol: {\r\n              markerType: \"square\",\r\n              markerFill: \"#000\",\r\n              markerFillOpacity: 0.9,\r\n              markerLineColor: \"#b4b3b3\"\r\n            }\r\n          }\r\n        },\r\n        clearButtonSymbol: [\r\n          {\r\n            markerType: \"square\",\r\n            markerFill: \"#000\",\r\n            markerLineColor: \"#b4b3b3\",\r\n            markerLineWidth: 2,\r\n            markerWidth: 15,\r\n            markerHeight: 15,\r\n            markerDx: 20\r\n          },\r\n          {\r\n            markerType: \"x\",\r\n            markerWidth: 10,\r\n            markerHeight: 10,\r\n            markerLineColor: \"#fff\",\r\n            markerDx: 20\r\n          }\r\n        ],\r\n        language: \"en-US\"\r\n      }).addTo(this.map);\r\n    },\r\n    exportjpg() {\r\n      var data = this.map.toDataURL({\r\n        mimeType: \"image/jpeg\", // or 'image/png'\r\n        save: true, // to pop a save dialog\r\n        fileName: \"map\" // file name\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n\r\n<style scoped>\r\n.main {\r\n  background-color: #ffffff;\r\n  padding: 10px;\r\n}\r\n#map {\r\n  height: calc(100vh - 120px);\r\n  margin: 0px;\r\n  padding: 0px;\r\n}\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./maptalks.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./maptalks.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./maptalks.vue?vue&type=template&id=8bd6d104&scoped=true&\"\nimport script from \"./maptalks.vue?vue&type=script&lang=js&\"\nexport * from \"./maptalks.vue?vue&type=script&lang=js&\"\nimport style0 from \"./maptalks.vue?vue&type=style&index=0&id=8bd6d104&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"8bd6d104\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}