{"version":3,"sources":["webpack:///./src/views/see/heatMap.vue?9ece","webpack:///./src/views/see/heatMap.vue?fce5","webpack:///./node_modules/maptalks.heatmap/dist/maptalks.heatmap.es.js","webpack:///src/views/see/heatMap.vue","webpack:///./src/views/see/heatMap.vue?f0be","webpack:///./src/views/see/heatMap.vue"],"names":["_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_heatMap_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_heatMap_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","n","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","staticClass","attrs","id","createCommonjsModule","fn","module","exports","simpleheat_1","simpleheat","canvas","_canvas","document","getElementById","_ctx","getContext","_width","width","_height","height","_max","_data","prototype","defaultRadius","defaultGradient","0.4","0.6","0.7","0.8","1","data","max","add","point","push","clear","radius","r","blur","undefined","circle","_circle","_createCanvas","ctx","r2","_r","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","beginPath","arc","Math","PI","closePath","fill","resize","gradient","grad","createLinearGradient","i","addColorStop","fillStyle","fillRect","_grad","getImageData","draw","minOpacity","clearRect","p","len","length","globalAlpha","drawImage","colored","_colorize","putImageData","pixels","j","createElement","constructor","_defaults","obj","defaults","keys","Object","getOwnPropertyNames","key","value","getOwnPropertyDescriptor","configurable","defineProperty","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","create","enumerable","writable","setPrototypeOf","maptalks_heatmap_es_options","heatValueScale","maptalks_heatmap_es_HeatLayer","_maptalks$Layer","HeatLayer","heats","options","Array","isArray","_this","_heats","getData","setData","redraw","addPoint","heat","maptalks_es","pushIn","onConfig","conf","renderer$$1","_getRenderer","clearHeatCache","setToRedraw","isEmpty","fire","toJSON","json","type","getJSONType","getId","config","clipExtent","_getHeatRadius","_expand","clipped","contains","fromJSON","_heatRadius","mergeOptions","registerJSONType","registerRenderer","_maptalks$renderer$Ca","_class","apply","arguments","map","getMap","layer","extent","getContainerExtent","maskExtent","prepareCanvas","displayExtent","convertTo","c","_pointToContainerPoint","intersects","completeRender","intersection","_heater","_heatViews","_heatData","drawOnInteracting","projection","getProjection","cellSize","grid","panePos","offsetPlatform","offsetX","x","offsetY","y","cell","k","expand","_containerPointToPrj","l","project","_prjToContainerPoint","floor","_i","_l","ll","round","min","onZoomEnd","onResize","onRemove","CanvasRenderer","console","log","heatMapvue_type_script_lang_js_","coord","mounted","loading","$loading","lock","text","spinner","background","setTimeout","close","$nextTick","initMap","option","center","zoom","cneter","maxZoom","spatialReference","baseLayer","urlTemplate","subdomains","attribution","cssFilter","heatCoords","index","arr","heatOptions","minOpacity ","heatValueScale ","0.65","addTo","see_heatMapvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__"],"mappings":"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","file":"js/chunk-451e0380.f9baabca.js","sourcesContent":["import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./heatMap.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./heatMap.vue?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"main\"},[_c('div',{attrs:{\"id\":\"heatMap\"}})])}]\n\nexport { render, staticRenderFns }","/*!\n * maptalks.heatmap v0.6.1\n * LICENSE : MIT\n * (c) 2016-2019 maptalks.org\n */\n/*!\n * requires maptalks@^0.25.0 \n */\nimport { Coordinate, Extent, Layer, Point, Util, renderer } from 'maptalks';\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar simpleheat_1 = createCommonjsModule(function (module) {\n    'use strict';\n\n    module.exports = simpleheat;\n\n    function simpleheat(canvas) {\n        if (!(this instanceof simpleheat)) return new simpleheat(canvas);\n\n        this._canvas = canvas = typeof canvas === 'string' ? document.getElementById(canvas) : canvas;\n\n        this._ctx = canvas.getContext('2d');\n        this._width = canvas.width;\n        this._height = canvas.height;\n\n        this._max = 1;\n        this._data = [];\n    }\n\n    simpleheat.prototype = {\n\n        defaultRadius: 25,\n\n        defaultGradient: {\n            0.4: 'blue',\n            0.6: 'cyan',\n            0.7: 'lime',\n            0.8: 'yellow',\n            1.0: 'red'\n        },\n\n        data: function data(_data) {\n            this._data = _data;\n            return this;\n        },\n\n        max: function max(_max) {\n            this._max = _max;\n            return this;\n        },\n\n        add: function add(point) {\n            this._data.push(point);\n            return this;\n        },\n\n        clear: function clear() {\n            this._data = [];\n            return this;\n        },\n\n        radius: function radius(r, blur) {\n            blur = blur === undefined ? 15 : blur;\n\n            // create a grayscale blurred circle image that we'll use for drawing points\n            var circle = this._circle = this._createCanvas(),\n                ctx = circle.getContext('2d'),\n                r2 = this._r = r + blur;\n\n            circle.width = circle.height = r2 * 2;\n\n            ctx.shadowOffsetX = ctx.shadowOffsetY = r2 * 2;\n            ctx.shadowBlur = blur;\n            ctx.shadowColor = 'black';\n\n            ctx.beginPath();\n            ctx.arc(-r2, -r2, r, 0, Math.PI * 2, true);\n            ctx.closePath();\n            ctx.fill();\n\n            return this;\n        },\n\n        resize: function resize() {\n            this._width = this._canvas.width;\n            this._height = this._canvas.height;\n        },\n\n        gradient: function gradient(grad) {\n            // create a 256x1 gradient that we'll use to turn a grayscale heatmap into a colored one\n            var canvas = this._createCanvas(),\n                ctx = canvas.getContext('2d'),\n                gradient = ctx.createLinearGradient(0, 0, 0, 256);\n\n            canvas.width = 1;\n            canvas.height = 256;\n\n            for (var i in grad) {\n                gradient.addColorStop(+i, grad[i]);\n            }\n\n            ctx.fillStyle = gradient;\n            ctx.fillRect(0, 0, 1, 256);\n\n            this._grad = ctx.getImageData(0, 0, 1, 256).data;\n\n            return this;\n        },\n\n        draw: function draw(minOpacity) {\n            if (!this._circle) this.radius(this.defaultRadius);\n            if (!this._grad) this.gradient(this.defaultGradient);\n\n            var ctx = this._ctx;\n\n            ctx.clearRect(0, 0, this._width, this._height);\n\n            // draw a grayscale heatmap by putting a blurred circle at each data point\n            for (var i = 0, len = this._data.length, p; i < len; i++) {\n                p = this._data[i];\n                ctx.globalAlpha = Math.max(p[2] / this._max, minOpacity === undefined ? 0.05 : minOpacity);\n                ctx.drawImage(this._circle, p[0] - this._r, p[1] - this._r);\n            }\n\n            // colorize the heatmap, using opacity value of each pixel to get the right color from our gradient\n            var colored = ctx.getImageData(0, 0, this._width, this._height);\n            this._colorize(colored.data, this._grad);\n            ctx.putImageData(colored, 0, 0);\n\n            return this;\n        },\n\n        _colorize: function _colorize(pixels, gradient) {\n            for (var i = 0, len = pixels.length, j; i < len; i += 4) {\n                j = pixels[i + 3] * 4; // get gradient color from opacity value\n\n                if (j) {\n                    pixels[i] = gradient[j];\n                    pixels[i + 1] = gradient[j + 1];\n                    pixels[i + 2] = gradient[j + 2];\n                }\n            }\n        },\n\n        _createCanvas: function _createCanvas() {\n            if (typeof document !== 'undefined') {\n                return document.createElement('canvas');\n            } else {\n                // create a new canvas instance in node.js\n                // the canvas class needs to have a default constructor without any parameter\n                return new this._canvas.constructor();\n            }\n        }\n    };\n});\n\nfunction _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }\n\nvar options = {\n    'max': 1,\n    'gradient': {\n        0.4: 'blue',\n        0.6: 'cyan',\n        0.7: 'lime',\n        0.8: 'yellow',\n        1.0: 'red'\n    },\n    'radius': 25,\n    'blur': 15,\n    'heatValueScale': 1,\n    'minOpacity': 0.05\n};\n\nvar HeatLayer = function (_maptalks$Layer) {\n    _inherits(HeatLayer, _maptalks$Layer);\n\n    function HeatLayer(id, heats, options) {\n        _classCallCheck(this, HeatLayer);\n\n        if (!Array.isArray(heats)) {\n            options = heats;\n            heats = null;\n        }\n\n        var _this = _possibleConstructorReturn(this, _maptalks$Layer.call(this, id, options));\n\n        _this._heats = heats || [];\n        return _this;\n    }\n\n    HeatLayer.prototype.getData = function getData() {\n        return this._heats;\n    };\n\n    HeatLayer.prototype.setData = function setData(heats) {\n        this._heats = heats || [];\n        return this.redraw();\n    };\n\n    HeatLayer.prototype.addPoint = function addPoint(heat) {\n        if (!heat) {\n            return this;\n        }\n        if (heat[0] && Array.isArray(heat[0])) {\n            Util.pushIn(this._heats, heat);\n        } else {\n            this._heats.push(heat);\n        }\n        return this.redraw();\n    };\n\n    HeatLayer.prototype.onConfig = function onConfig(conf) {\n        for (var p in conf) {\n            if (options[p]) {\n                return this.redraw();\n            }\n        }\n        return this;\n    };\n\n    HeatLayer.prototype.redraw = function redraw() {\n        var renderer$$1 = this._getRenderer();\n        if (renderer$$1) {\n            renderer$$1.clearHeatCache();\n            renderer$$1.setToRedraw();\n        }\n        return this;\n    };\n\n    HeatLayer.prototype.isEmpty = function isEmpty() {\n        if (!this._heats.length) {\n            return true;\n        }\n        return false;\n    };\n\n    HeatLayer.prototype.clear = function clear() {\n        this._heats = [];\n        this.redraw();\n        this.fire('clear');\n        return this;\n    };\n\n    /**\r\n     * Export the HeatLayer's JSON.\r\n     * @return {Object} layer's JSON\r\n     */\n\n\n    HeatLayer.prototype.toJSON = function toJSON(options) {\n        if (!options) {\n            options = {};\n        }\n        var json = {\n            'type': this.getJSONType(),\n            'id': this.getId(),\n            'options': this.config()\n        };\n        var data = this.getData();\n        if (options['clipExtent']) {\n            var clipExtent = new Extent(options['clipExtent']);\n            var r = this._getHeatRadius();\n            if (r) {\n                clipExtent = clipExtent._expand(r);\n            }\n            var clipped = [];\n            for (var i = 0, len = data.length; i < len; i++) {\n                if (clipExtent.contains(new Coordinate(data[i][0], data[i][1]))) {\n                    clipped.push(data[i]);\n                }\n            }\n            json['data'] = clipped;\n        } else {\n            json['data'] = data;\n        }\n\n        return json;\n    };\n\n    /**\r\n     * Reproduce a HeatLayer from layer's JSON.\r\n     * @param  {Object} json - layer's JSON\r\n     * @return {maptalks.HeatLayer}\r\n     * @static\r\n     * @private\r\n     * @function\r\n     */\n\n\n    HeatLayer.fromJSON = function fromJSON(json) {\n        if (!json || json['type'] !== 'HeatLayer') {\n            return null;\n        }\n        return new HeatLayer(json['id'], json['data'], json['options']);\n    };\n\n    HeatLayer.prototype._getHeatRadius = function _getHeatRadius() {\n        if (!this._getRenderer()) {\n            return null;\n        }\n        return this._getRenderer()._heatRadius;\n    };\n\n    return HeatLayer;\n}(Layer);\n\nHeatLayer.mergeOptions(options);\n\nHeatLayer.registerJSONType('HeatLayer');\n\nHeatLayer.registerRenderer('canvas', function (_maptalks$renderer$Ca) {\n    _inherits(_class, _maptalks$renderer$Ca);\n\n    function _class() {\n        _classCallCheck(this, _class);\n\n        return _possibleConstructorReturn(this, _maptalks$renderer$Ca.apply(this, arguments));\n    }\n\n    _class.prototype.draw = function draw() {\n        var map = this.getMap(),\n            layer = this.layer,\n            extent = map.getContainerExtent();\n        var maskExtent = this.prepareCanvas(),\n            displayExtent = extent;\n        if (maskExtent) {\n            maskExtent = maskExtent.convertTo(function (c) {\n                return map._pointToContainerPoint(c);\n            });\n            //out of layer mask\n            if (!maskExtent.intersects(extent)) {\n                this.completeRender();\n                return;\n            }\n            displayExtent = extent.intersection(maskExtent);\n        }\n\n        if (!this._heater) {\n            this._heater = simpleheat_1(this.canvas);\n        }\n        this._heater.radius(layer.options['radius'] || this._heater.defaultRadius, layer.options['blur']);\n        if (layer.options['gradient']) {\n            this._heater.gradient(layer.options['gradient']);\n        }\n        this._heater.max(layer.options['max']);\n        //a cache of heat points' viewpoints.\n        if (!this._heatViews) {\n            this._heatViews = [];\n        }\n\n        var heats = layer.getData();\n        if (heats.length === 0) {\n            this.completeRender();\n            return;\n        }\n        var data = this._heatData(heats, displayExtent);\n        this._heater.data(data).draw(layer.options['minOpacity']);\n        this.completeRender();\n    };\n\n    _class.prototype.drawOnInteracting = function drawOnInteracting() {\n        this.draw();\n    };\n\n    _class.prototype._heatData = function _heatData(heats, displayExtent) {\n        var map = this.getMap(),\n            layer = this.layer;\n        var projection = map.getProjection();\n        var data = [],\n            r = this._heater._r,\n            max = layer.options['max'] === undefined ? 1 : layer.options['max'],\n            cellSize = r / 2,\n            grid = [],\n            panePos = map.offsetPlatform(),\n            offsetX = panePos.x % cellSize,\n            offsetY = panePos.y % cellSize;\n        var heat = void 0,\n            p = void 0,\n            cell = void 0,\n            x = void 0,\n            y = void 0,\n            k = void 0;\n        displayExtent = displayExtent.expand(r).convertTo(function (c) {\n            return new Point(map._containerPointToPrj(c));\n        });\n        this._heatRadius = r;\n        for (var i = 0, l = heats.length; i < l; i++) {\n            heat = heats[i];\n            if (!this._heatViews[i]) {\n                this._heatViews[i] = projection.project(new Coordinate(heat[0], heat[1]));\n            }\n            p = this._heatViews[i];\n            if (displayExtent.contains(p)) {\n                p = map._prjToContainerPoint(p);\n                x = Math.floor((p.x - offsetX) / cellSize) + 2;\n                y = Math.floor((p.y - offsetY) / cellSize) + 2;\n\n                k = (heat[2] !== undefined ? +heat[2] : 0.1) * layer.options['heatValueScale'];\n\n                grid[y] = grid[y] || [];\n                cell = grid[y][x];\n\n                if (!cell) {\n                    grid[y][x] = [p.x, p.y, k];\n                } else {\n                    cell[0] = (cell[0] * cell[2] + p.x * k) / (cell[2] + k); // x\n                    cell[1] = (cell[1] * cell[2] + p.y * k) / (cell[2] + k); // y\n                    cell[2] += k; // cumulated intensity value\n                }\n            }\n        }\n        for (var _i = 0, _l = grid.length; _i < _l; _i++) {\n            if (grid[_i]) {\n                for (var j = 0, ll = grid[_i].length; j < ll; j++) {\n                    cell = grid[_i][j];\n                    if (cell) {\n                        data.push([Math.round(cell[0]), Math.round(cell[1]), Math.min(cell[2], max)]);\n                    }\n                }\n            }\n        }\n        return data;\n    };\n\n    _class.prototype.onZoomEnd = function onZoomEnd() {\n        delete this._heatViews;\n        _maptalks$renderer$Ca.prototype.onZoomEnd.apply(this, arguments);\n    };\n\n    _class.prototype.onResize = function onResize() {\n        _maptalks$renderer$Ca.prototype.onResize.apply(this, arguments);\n        if (this.canvas) {\n            this._heater._width = this.canvas.width;\n            this._heater._height = this.canvas.height;\n        }\n    };\n\n    _class.prototype.onRemove = function onRemove() {\n        this.clearHeatCache();\n        delete this._heater;\n    };\n\n    _class.prototype.clearHeatCache = function clearHeatCache() {\n        delete this._heatViews;\n    };\n\n    return _class;\n}(renderer.CanvasRenderer));\n\nexport { HeatLayer };\n\ntypeof console !== 'undefined' && console.log('maptalks.heatmap v0.6.1, requires maptalks@^0.25.0.');\n","<template>\r\n  <div class=\"main\">\r\n    <div id=\"heatMap\"></div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport \"maptalks/dist/maptalks.css\";\r\nimport * as maptalks from \"maptalks\";\r\nimport { HeatLayer } from 'maptalks.heatmap';\r\nexport default {\r\n  data() {\r\n    return {\r\n      coord:[[31.381779, 121.228638, 54],\r\n        [31.123, 121.289063, 14],\r\n        [31.113, 121.212891063, 24],\r\n        [31.21123, 121.23289063, 14],\r\n        [31.41123, 121.23289063, 22],\r\n        [31.231123, 121.23289063, 14],\r\n        [31.1274516203, 121.393433, 34],\r\n        [31.424151, 121.662598, 61],\r\n        [31.23134, 121.133, 34],\r\n        [31.312341545, 121.34222, 44],\r\n        [31.4611515279, 121.37146, 45],\r\n        [31.12341545, 121.34222, 33],\r\n        [31.611515279, 121.37146, 45],\r\n        [31.12341545, 121.34222, 14],\r\n        [31.611515279, 121.37146, 45],\r\n        [30.134, 121.61597, 77],\r\n        [30.8123499868, 121.282446, 26],\r\n        [31.51, 121.181824, 73]]\r\n    };\r\n  },\r\n  mounted() {\r\n    const loading = this.$loading({\r\n      lock: true,\r\n      text: 'Loading',\r\n      spinner: 'el-icon-loading',\r\n      background: 'rgba(0, 0, 0, 0.7)'\r\n    });\r\n    setTimeout(() => {\r\n      loading.close(); \r\n      this.$nextTick(() => initMap());\r\n    }, 1000);\r\n   \r\n    const initMap = () => {\r\n      let option = {\r\n        center: [121.460651,31.219751],\r\n        zoom: 8,\r\n        cneter: [121.0],\r\n        maxZoom: 16,\r\n        spatialReference: {\r\n          // projection: \"baidu\"\r\n        },\r\n        baseLayer: new maptalks.TileLayer(\"base\", {\r\n          urlTemplate: 'http://wprd{s}.is.autonavi.com/appmaptile?x={x}&y={y}&z={z}&lang=zh_cn&size=1&scl=1&style=7',\r\n          subdomains: ['01', '02', '03', '04'],\r\n          attribution:\r\n            '&copy; <a target=\"_blank\" href=\"http://map.baidu.com\">GaoDeMap</a>',\r\n           cssFilter: \"sepia(80%) invert(90%)\"\r\n        })\r\n      };\r\n      this.map = new maptalks.Map(\"heatMap\", option);\r\n    \r\n    \r\n    let heatCoords=this.coord.map((value,index,arr)=>{\r\n      return [value[1],value[0],value[2]]\r\n    })\r\n    let heatOptions={\r\n      'max': 80,//最大值\r\n      'radius' : 30,  //点半径\r\n      'blur' : 20,    //模糊半径\r\n      'minOpacity ':0.05,//最小点不透明度 default 0.05\r\n      'heatValueScale ':1,\r\n      'gradient' : {0.4: 'blue', 0.65: 'lime', 1: 'red'}\r\n    }\r\n\r\n    const heatLayer = new HeatLayer('heat', heatCoords,heatOptions).addTo(this.map);\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style>\r\n.main {\r\n  background-color: #ffffff;\r\n  padding: 10px;\r\n}\r\n#heatMap {\r\n  height: calc(100vh - 80px);\r\n  margin: 0px;\r\n  padding: 0px;\r\n}\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./heatMap.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./heatMap.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./heatMap.vue?vue&type=template&id=608e30be&\"\nimport script from \"./heatMap.vue?vue&type=script&lang=js&\"\nexport * from \"./heatMap.vue?vue&type=script&lang=js&\"\nimport style0 from \"./heatMap.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}